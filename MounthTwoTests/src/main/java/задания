1. Написать метод для сортировки массива методом quick sort.
2. Выполнить сортировку массива следующим образом:
 сформировать дерево из элементов массива, выполнить обход дерева.
3. Выполнить сортировку двусвязного списка любым удобном методом.
4. Выполнить сортировку односвязного списка любым удобным способом.
5. Выполнить реверс односвязного списка.
6. Выполнить реверс двусвязного списка.
7. Написать функцию, которая будет принимать строку.
Строка должна состоять из скобок. Допустимые символы
- '[', '{', '(', ']', '}', ')'.
Проверить, что входная строка состоит исключительно из допустимых символов
и все открывающиеся скобки закрыты и закрыты в правильном порядке.
 Внутри открытых скобок может быть последовательность из других скобок.
Примеры корректных строк: "[]", "{}", "()", "[](){}", "[()]{}", "[[]]", "{(())}{[]}", "([]){}{()}{[]}", "([]{{[]()}}{()})"
Примеры некорректных строк: "][", "}", "[)", "[){}", "[(]{}", "[[]", "{}{", "[][}", "[])"
Подсказка: данную задачу легче выполнить с использованием рекурсии.
8. Написать скрипты для создания таблицы для хранения информации о покупателях и о товарах.
 Информация о покупателях должна включать имя покупателя и список заказанных товаров.
 В таблице с товарами должна содержаться информация об имени товаров, описание товаров,
 список пользователей заказавших товар. Должны быть написаны скрипты для заполнения таблицы
  (не менее 4х записей в каждой из таблиц).
9. Написать скрипты для:
- коррекции информации о товаре, поиск по имени покупателя, заказавшего товар;
- вычитки всех покупателей (имён покупателей ), заказавших товар с указанным именем;
- вычитки всех имеющихся товаров с указанием имён покупателей , заказавших товар.
10. Написать программу на Java для выполнения запросов по пункту 9 с использованием
 базы данных в пункте 8.